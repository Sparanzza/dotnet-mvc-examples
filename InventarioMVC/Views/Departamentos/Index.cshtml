@using InventarioMVC.ViewModels
@using X.PagedList.Mvc.Core
@model ListadoViewModel<Departamento>

@{
  ViewData["Title"] = "Departamentos";
}

<partial name="Actions/_CrearBusqueda" model="Model.CrearBusquedaViewModel()"/>
<table class="table table-hover table-bordered table-striped">
  <thead class="bg-primary text-white">
  <tr>
    <th>
      @Html.DisplayNameFor(model => model.Registros[0].Nombre)
    </th>
    <th>
      @Html.DisplayNameFor(model => model.Registros[0].Descripcion)
    </th>
    <th>
      @Html.DisplayNameFor(model => model.Registros[0].FechaCreacion)
    </th>
    <th class="text-center">Acciones</th>
  </tr>
  </thead>
  <tbody>
  @foreach (var item in Model.Registros)
  {
    <tr>
      <td>
        @Html.DisplayFor(modelItem => item.Nombre)
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.Descripcion)
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.FechaCreacion)
      </td>
      <td class="text-center">
        <partial name="Actions/_Crud" model="@item.Id"/>
      </td>
    </tr>
  }
  </tbody>
</table>

@Html.PagedListPager(Model.Registros,
  page => Url.Action("Index", new { Pagina = page, FiltroBusqueda = Model.FiltroBusqueda }),
  new PagedListRenderOptions() { LiElementClasses = ["page-item"], PageClasses = ["page-link"] })